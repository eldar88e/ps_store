services:

  pg-staging:
    image: postgres:16.1
    container_name: pg-store-staging
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      TZ: Europe/Moscow
    volumes:
      - db_data_store_st:/var/lib/postgresql/data
    networks:
      - store-net-staging

  store-staging:
    image: store
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: store-staging
    environment:
      RAILS_ENV: production
      TZ: Europe/Moscow
      REDIS_URL: redis://redis:6379/1
    depends_on:
      - pg-staging
    volumes:
      - gems_store_st:/usr/local/bundle
      - ./public:/app/public
      - ./log:/app/log
      - ./node_modules:/app/node_modules
    networks:
      - store-net-staging
    restart: "unless-stopped"

  sidekiq-staging:
    image: store
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sidekiq-staging
    environment:
      RAILS_ENV: production
      TZ: Europe/Moscow
      REDIS_URL: redis://redis:6379/0
    command: bundle exec sidekiq
    depends_on:
      - redis-staging
    volumes:
      - gems_store_st:/usr/local/bundle
      - .:/app
    networks:
      - store-net-staging
    restart: "unless-stopped"

  nginx-staging:
    image: nginx:latest
    container_name: nginx-store-staging
    volumes:
      - ./nginx-staging.conf:/etc/nginx/nginx.conf
      - ./public:/app
    depends_on:
      - store-staging
    networks:
      - store-net-staging
      - proxy-net

  redis-staging:
    image: redis:latest
    container_name: redis-store-staging
    command: redis-server
    restart: always
    networks:
      - store-net-staging
    volumes:
      - redis_store_st:/data

volumes:
  db_data_store_st:
  redis_store_st:
  gems_store_st:

networks:
  store-net-staging:
  proxy-net:
    external: true