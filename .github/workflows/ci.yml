name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build environment
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: ps_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    container:
      image: ruby:3.2.2-alpine
      env:
        RAILS_ENV: test
        DATABASE_URL: "postgres://admin:admin@postgres:5432/ps_test"
        PRODUCT_SETTINGS_PATH: ${{ github.workspace }}/product-settings.yml
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apk add --no-cache \
            build-base \
            postgresql-dev \
            postgresql-client \
            tzdata \
            yarn \
            git \
            chromium \
            chromium-chromedriver \
            tar \
            && rm -rf /var/cache/apk/*

      - name: Install bundler
        run: |
          gem install bundler

      - name: Load bundle Cache
        uses: actions/cache@v4
        id: bundle-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        if: steps.bundle-cache.outputs.cache-hit != 'true'
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run migration
        run: |
          bundle exec rails db:migrate

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Load yarn cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Load assets Cache
        id: assets-cache
        uses: actions/cache@v4
        with:
          path: public/assets
          key: ${{ runner.os }}-assets-${{ hashFiles('app/assets/**') }}-${{ hashFiles('app/channels/**') }}-${{ hashFiles('app/javascript/**') }}

      - name: Install npm packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing npm packages..."
          yarn install

      - name: Compile assets
        if: steps.assets-cache.outputs.cache-hit != 'true'
        run: |
          echo "Precompiling assets..."
          bundle exec rails assets:precompile

      - name: Run Tests
        uses: ./.github/workflows/rspec
